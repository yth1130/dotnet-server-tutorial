ServerCore : 서버 코어부분.
Server : 서버마다 달라지는 부분?
DummyClient : 더미 클라이언트.

---
멀티스레드 프로그래밍

1.개론
프로그램(프로세스)은 개별 식당.
cpu코어가 식당 종업원처럼 일함.
cpu코어를 여러개 두어 종업원이 여러명 일하는 것처럼 사용.
한 프로세스 내에서
Heap 영역(new)과 데이터 영역(static)은 스레드들이 공유해서 사용. 스택 영역은 공유하지 않는다.

쓰레드 생성
컴파일러 최적화
캐시 이론
메모리 배리어
Interlocked
Lock 기초
DeadLock
Lock구현 이론
SpinLock
Context Switching
AutoResetEvent
ReaderWriterLock
ReaderWriterLock 구현 연습
Thread Local Storage

---
네트워크 프로그래밍

1. 네트워크 기초
안정성. 해킹 공격에 대한 방어가 중요.

택배에 비유.
집에서 집으로 바로 보내지 않고 경비실에 맡긴다. 주소를 적어서. 단지 내라면 주소를 간략하게 이름으로 적어서 보낼 수도 있다.
다른 단지로 보내는 경우. 경비실을 경유해 택배 배송센터로 보내준다. 거기서 도착 단지의 경비실로 보낸다.

집은 단말기, 경비실은 스위치, 택배배송센터는 라우터.
같은 네트워크 안의 컴퓨터끼리의 통신은 라우터까지 가지 않고 네트워크 안에서 처리.
다른 네트워크로 보낼 때는 라우터를 거친다. ip주소를 사용.

2. 통신 모델

택배 보낼 물건
상품을 포장 
-> 배송 정책(단순 배달, 등기/수취인 확인 등) 
-> 주소 기입 
-> 단지 경로(바로 다음 목표. 계속 바뀜. (경비실 -> 배송 센터 -> 도착 경비실 -> 도착지))
-> 택배 운송

전송 데이터
어플리케이션(유저 인터페이스. HTTP, FTP, DNS 등. 주소로 도메인 사용.) 
-> 트랜스포트(전송 확인/오류 해결. TCP(꼼꼼하게 체크), UDP(퀵으로 빨리 보내지만 사후처리 없음))
-> 네트워크(네트워크 간 경로 설정. IPv4, IPv6 등. 관련 장치는 라우터(다른 단지. IP사용.))
-> 데이터 링크(네트워크 내의 경로 설정. 이더넷, PPP. 관련 장치는 스위치(같은 단지 내. MAC 사용. 기기마다 고유함.))
-> 피지컬(신호 처리. 케이블, 허브)
=> TCP/IP 모델. 다섯 계층이다. 밑에서부터 1계층.

OSI 7계층은 위의 TCP/IP모델에서 어플리케이션 부분이 세 계층으로 나뉘어져 있음. 어플리케이션, 프레젠테이션, 세션